<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
    http://www.springframework.org/schema/task  http://www.springframework.org/schema/task/spring-task.xsd">

	
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>

	<context:property-placeholder
		ignore-unresolvable="true" location="classpath*:oss.properties" />

	<bean id="disconfMgrBean" class="com.baidu.disconf.client.DisconfMgrBean"
		destroy-method="destroy">
		<property name="scanPackage" value="com"></property>
	</bean>
	<bean id="disconfMgrBean2" class="com.baidu.disconf.client.DisconfMgrBeanSecond"
		init-method="init" destroy-method="destroy">
	</bean>

	<task:annotation-driven executor="asyncExecutor" />

	<!-- OSS Client -->
	<bean id="ossClient" class="com.aliyun.oss.OSSClient">
		<constructor-arg name="endpoint" value="${oss.endpoint}" />
		<constructor-arg name="accessKeyId" value="${oss.accessKeyId}" />
		<constructor-arg name="secretAccessKey" value="${oss.accessKeySecret}" />
	</bean>

	<!-- OSS Client Util -->
	<bean id="ossClientUtil"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="com.wisedu.wecloud.commons.util.OSSClientUtil.init" />
		<property name="arguments">
			<list>
				<ref bean="ossClient" />
				<value>${oss.bucket}</value>
				<value>${oss.fileDir}</value>
			</list>
		</property>
	</bean>
	<bean id="requestFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory">
		<!--连接时间(毫秒) -->
		<property name="connectTimeout" value="20000" />
		<!--读取时间(毫秒) -->
		<property name="readTimeout" value="20000" />
	</bean>
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<constructor-arg ref="requestFactory" />
	</bean>

	
	<!-- 启动 Spring MVC 的注解功能，完成请求和注解 POJO 的映射 -->
	<!-- <bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter" />
			</list>
		</property>
	</bean> -->

	<!--线程的coreSize 为 100，maxSize 为10000，队列为100，当线程超过100时，新的任务将会放到queue里面， queue满后，将会继续创建线程，直到maxSize，此时任务将由调用方执行，即变为同步 -->
	<task:executor id="asyncExecutor" pool-size="100-10000"
		queue-capacity="100" rejection-policy="CALLER_RUNS" />
</beans>